####################### LOCAL CACHE CONFIGURE ###########################################
cleaner.delay.seconds=60
cleaner.interval.seconds=300
##########################     END      ##################################################

####################### REDIS3 CLUSTER CONFIGURE #########################################
pool.maxTotal=30
pool.maxIdle=20
pool.minIdle=3


redis.cluster.host.list=10.20.71.150:6319,10.20.71.161:6309
redis.cluster.soTimeout=800
redis.cluster.maxRedirections=8

redis.connectionTimeout=1000

##########################     END      ##################################################

####################### REDIS SECTION-CLUSTER/SINGLE   ###################################



##########################     END      ###################################################


####################### MEMCACHED SECTION-CLUSTER /SINGLE   ###############################
memcached.section.list=204.12.238.98:11211
#optional
memecached.section.weight=
#since memcached is nio based single thread connection listener. not suggest to much big size. 
memecached.pool.size=6





##########################     END      ####################################################


########################### EHCACHE CLUSTER/SINGLE #########################################

ehcache.xml.location=classpath:ehcache.xml
##########################     END      ####################################################


############################ global configuration ###########################################
#Serializer associated. when your input data is not a simple String or java basic types. 
#system want to know how do you want your object serialized, and also to make sure your 
#stored data could be fetched out and well de-serialized.
# currently supports:
#
#1."org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"
#		it's based on jdk default
#		serialize policy, when means your stored data should implements java.io.Serializable Or Externalizable
#		interface and of which 'static' and 'transient'  decorated attributes will not serialized. but it's 
#		very effective. but serialized data not intuitionally
#
#2."org.springframework.data.redis.serializer.JacksonJsonRedisSerializer"
#		transfer your object to a JSON String. very intuitionally. 
#		and JSON data can directly return to font-end, this is the default Serializer
#
#3."org.springframework.data.redis.serializer.OxmSerializer"
#		transfer your object to an XML String. intuitionally but not effective.
#
#4."org.springframework.data.redis.serializer.StringRedisSerializer"
#		only when your data is a String type than suggested.
#
#And also you can custom your own Serializer by implements interface "org.springframework.data.redis.serializer.RedisSerializer<T>"
#at last I provided a simple annotation "@KeyExtractable(attrs={},operatioins={})"

common.cache.keySerializer=
common.cache.valueSerializer=
##########################     END      ###################################################
